{
	"info": {
		"_postman_id": "16d7c734-e230-4485-8b71-ed73550b2e94",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Проверить, что в body приходит правильный string.\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"//let resp_name = jsonData.name\r",
							"//let resp_age = jsonData.age\r",
							"//console.log (\"resp_name = \" + resp_name)\r",
							"//console.log (\"resp_age = \" + resp_age)\r",
							"//console.log (\"jsonData = \", jsonData)\r",
							"\r",
							"//4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Check_name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Sasha\");\r",
							"});\r",
							"\r",
							"//5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Check_age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"37\");\r",
							"});\r",
							"\r",
							"//6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Check_salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(2132);\r",
							"});\r",
							"\r",
							"//7. Спарсить request.\r",
							"var r = request.data\r",
							"\r",
							"//8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Chek_name1\", function () {\r",
							"        pm.expect(r.name).to.eql(r.name);\r",
							"});\r",
							"\r",
							"//9. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Chek_age1\", function () {\r",
							"        pm.expect(r.age).to.eql(r.age);\r",
							"});\r",
							"\r",
							"//10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Chek_salary1\", function () {\r",
							"        pm.expect(r.salary).to.eql(r.salary);\r",
							"});\r",
							"\r",
							"//11. Вывести в консоль параметр family из response.\r",
							"let resp_family = jsonData.family\r",
							"console.log (\"resp_family = \", resp_family)\r",
							"\r",
							"//12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"let resp_u_salary_1_5_year = r.salary*4\r",
							"//console.log (\"resp_u_salary_1_5_year = \", r.salary*4)\r",
							"pm.test(\"Chek_salary*4\", function () {\r",
							"        pm.expect(resp_u_salary_1_5_year).to.eql(r.salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Sasha",
							"type": "text"
						},
						{
							"key": "age",
							"value": "37",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2132",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"//4. Спарсить request.\r",
							"var r1 = pm.request.url.query.toObject() \r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Chek_name\", function () {\r",
							"        pm.expect(jsonData.name).to.eql(r1.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"Chek_age\", function () {\r",
							"        pm.expect(jsonData.age).to.eql(r1.age);\r",
							"});\r",
							"\r",
							"//7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Chek_salary\", function () {\r",
							"        pm.expect(jsonData.salary).to.eql(+r1.salary);\r",
							"});\r",
							"\r",
							"//8. Вывести в консоль параметр family из response.\r",
							"let resp_family = jsonData.family\r",
							"console.log (\"resp_family = \", resp_family )\r",
							"\r",
							"//9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Chek_dog_name\", function () {\r",
							"       pm.expect(jsonData.family.pets.dog).to.property(\"name\");\r",
							"});\r",
							"\r",
							"//10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Chek_dog_age\", function () {\r",
							"       pm.expect(jsonData.family.pets.dog).to.property(\"age\");\r",
							"});\r",
							"\r",
							"//11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"dog_name\", function () {\r",
							"        pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"//12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"dog_age\", function () {\r",
							"        pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Sasha&age=37&salary=2132",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Sasha"
						},
						{
							"key": "age",
							"value": "37"
						},
						{
							"key": "salary",
							"value": "2132"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Отправить запрос.\r",
							"//2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3. Спарсить response body в json.\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"//4. Спарсить request.\r",
							"var r2 = pm.request.url.query.toObject() \r",
							"\r",
							"//5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Chek_name\", function () {\r",
							"        pm.expect(jsonData.name).to.eql(r2.name);\r",
							"});\r",
							"\r",
							"//6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"Chek_age\", function () {\r",
							"        pm.expect(jsonData.age).to.eql(+r2.age);\r",
							"});\r",
							"\r",
							"//7. Вывести в консоль параметр salary из request.\r",
							"let req_salary = r2.salary\r",
							"console.log (\"req_salary = \", req_salary )\r",
							"\r",
							"//8. Вывести в консоль параметр salary из response.\r",
							"let resp_salary = jsonData.salary\r",
							"console.log (\"resp_salary = \", resp_salary )\r",
							"\r",
							"//9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log (jsonData.salary[0] )\r",
							"\r",
							"//10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log (jsonData.salary[1] )\r",
							"\r",
							"//11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log (jsonData.salary[2] )\r",
							"\r",
							"//12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Chek_salary_0\", function () {\r",
							"        pm.expect(jsonData.salary[0]).to.eql(+r2.salary);\r",
							"});\r",
							"\r",
							"//13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"Chek_salary_1\", function () {\r",
							"        pm.expect(+jsonData.salary[1]).to.eql(r2.salary*2);\r",
							"});\r",
							"\r",
							"//14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Chek_salary_2\", function () {\r",
							"        pm.expect(+jsonData.salary[2]).to.eql(r2.salary*3);\r",
							"});\r",
							"\r",
							"//15. Создать в окружении переменную name\r",
							"pm.environment.set(\"name\")\r",
							"\r",
							"//16. Создать в окружении переменную age\r",
							"pm.environment.set(\"age\")\r",
							"\r",
							"//17. Создать в окружении переменную salary\r",
							"pm.environment.set(\"salary\")\r",
							"\r",
							"//18. Передать в окружение переменную name\r",
							"pm.environment.set(\"name\",r2.name)\r",
							"\r",
							"//19. Передать в окружение переменную age\r",
							"pm.environment.set(\"age\",r2.age)\r",
							"\r",
							"//20. Передать в окружение переменную salary\r",
							"pm.environment.set(\"salary\",r2.salary)\r",
							"\r",
							"//21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary."
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Sasha&age=37&salary=2132",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Sasha"
						},
						{
							"key": "age",
							"value": "37"
						},
						{
							"key": "salary",
							"value": "2132"
						}
					]
				}
			},
			"response": []
		}
	]
}